{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/phoenix-utils.js","webpack:///./src/assets/images/generic_vr_entry.svg","webpack:///./src/utils/link-channel.js","webpack:///./src/utils/crypto.js","webpack:///./src/telemetry.js","webpack:///./src/utils/i18n.js","webpack:///./src/assets/avatars/avatars.js","webpack:///./src/storage/store.js","webpack:///./src/assets/images/hub-preview-light-no-shadow.png","webpack:///./src/utils/identity.js","webpack:///./src/react-components/wrap-with-audio.js","webpack:///./src/link.js","webpack:///./src/react-components/link-root.js","webpack:///./src/assets/stylesheets/link.scss","webpack:///./src/utils/vr-caps-detect.js","webpack:///./src/utils/disable-ios-zoom.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","5","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","connectToReticulum","debug","qs","URLSearchParams","location","search","socketProtocol","document","protocol","socketHost","socketPort","retHost","retPort","split","socketUrl","console","log","socketSettings","params","session_id","_v2","default","logger","kind","msg","socket","Socket","connect","getReticulumFetchUrl","getLandingPageForPhoto","photoUrl","parsedUrl","URL","pathname","replace","_v","_phoenix","createElement","path","absolute","_crypto","LINK_ACTION_TIMEOUT","constructor","store","this","setSocket","generateCode","Promise","resolve","onFinished","finished","step","getLetter","Math","floor","random","code","readyToSend","leftChannel","channel","timeout","leave","cancel","on","state","keys","incoming","activity","hasChangedName","profile","_extends","credentials","generatePublicKeyAndEncryptedObject","public_key","then","publicKeyString","encryptedData","payload","target_session_id","reply_to_session_id","join","receive","error","attemptLink","reject","generateKeys","privateKey","numOccupants","setTimeout","Error","warn","decryptObject","async","deriveKey","publicKey","crypto","subtle","public","publicKeyToString","JSON","stringify","exportKey","stringToPublicKey","importKey","parse","namedCurve","stringToArrayBuffer","buf","Uint8Array","charCodeAt","arrayBufferToString","b","byteLength","String","fromCharCode","keyPair","generateKey","incomingPublicKeyString","obj","iv","incomingPublicKey","secret","btoa","encrypt","base64value","ciphertext","atob","decrypt","Raven","config","install","_ravenJs","_translationsData","navigatorLang","navigator","languages","language","userLanguage","toLowerCase","lang","localeData","messages","en","avatars","id","model","_jsonschema","_deepmerge","_eventTargetShim","_identity","LOCAL_STORE_KEY","STORE_STATE_CACHE_KEY","validator","Validator","SCHEMA","definitions","type","additionalProperties","properties","displayName","pattern","avatarId","token","email","hasFoundFreeze","lastEnteredAt","settings","lastUsedMicDeviceId","uploadPromotionTokens","items","fileId","promotionToken","$ref","EventTarget","super","init","update","generateDefaultProfile","generateRandomName","localStorage","getItem","setItem","newState","finalState","_deepmerge2","valid","validate","dispatchEvent","CustomEvent","selectRandom","names","avatarIds","_avatars","arr","map","av","_react","_propTypes","ReactAudioContext","React","createContext","hudHoverSound","WithHoverSound","sound","children","_react2","Consumer","context","cloneElement","onMouseEnter","e","playSound","props","propTypes","PropTypes","string","_reactDom","_telemetry","_linkRoot","_linkChannel","_phoenixUtils","_store","_vrCapsDetect","_telemetry2","Store","linkChannel","LinkChannel","ReactDOM","render","_linkRoot2","showHeadsetLinkOption","detectInHMD","getElementById","_reactIntl","_en","_i18n","_classnames","_link","_disableIosZoom","_generic_vr_entry","_wrapWithAudio","MAX_DIGITS","MAX_LETTERS","addLocaleData","disableiOSZoom","hasTouchEvents","documentElement","LinkRoot","Component","[object Object]","args","_temp","entered","isAlphaMode","failedAtLeastOnce","componentDidMount","addEventListener","handleKeyDown","componentWillUnmount","removeEventListener","keyCode","preventDefault","stopPropagation","addToEntry","maxAllowedChars","ch","newChars","attemptLookup","setState","removeChar","substring","response","href","catch","message","attemptEntry","url","res","fetch","status","toggleMode","IntlProvider","locale","className","styles","link","linkContents","logo","src","_image","_classnames2","codeLoadingPanel","enteredContents","header","FormattedMessage","charInput","onChange","ev","target","match","toUpperCase","enteredFooter","onClick","HeadsetIcon","headsetIcon","keypad","disabled","keypadButton","onTouchStart","keypadToggleMode","keypadZeroButton","keypadBackspace","footer","linkHeadsetFooterLink","style","visibility","intl","bool","keypad-button","char-input","link-contents","entered-footer","entered-contents","code-loading-panel","entry-footer-image","entryFooterImage","footer-image","footerImage","keypad-backspace","keypad-toggle-mode","char","headset-icon","link-headset-footer-link","getAvailableVREntryTypes","ua","userAgent","isSamsungBrowser","browser","test","isWebVRCapableBrowser","hasNativeWebVRImplementation","isDaydreamCapableBrowser","isIDevice","AFRAME","utils","device","isIOS","isFirefoxBrowser","isUIWebView","mediaDevices","safari","VR_DEVICE_AVAILABILITY","maybe","yes","no","displays","getVRDisplays","isOculusBrowser","isInHMD","screen","isNonWebVRFirefox","generic","isMobile","cardboard","gearvr","isMaybeGearVRCompatibleDevice","daydream","isMaybeDaydreamCompatibleDevice","find","capabilities","canPresent","GENERIC_ENTRY_TYPE_DEVICE_BLACKLIST","hasDaydreamWebVRDevice","detect","isFirefoxReality","_detectBrowser","detectOS","lastTouchAtMs","scale","now","Date","getTime","isDoubleTouch"],"mappings":"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","file":"assets/js/link-6b009bced1642123ef36.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t5: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([542,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import uuid from \"uuid/v4\";\nimport { Socket } from \"phoenix\";\n\nexport function connectToReticulum(debug = false) {\n  const qs = new URLSearchParams(location.search);\n\n  const socketProtocol = qs.get(\"phx_protocol\") || (document.location.protocol === \"https:\" ? \"wss:\" : \"ws:\");\n  let socketHost = qs.get(\"phx_host\");\n  let socketPort = qs.get(\"phx_port\");\n\n  if (process.env.RETICULUM_SERVER) {\n    const [retHost, retPort] = process.env.RETICULUM_SERVER.split(\":\");\n    socketHost = socketHost || retHost || \"\";\n    socketPort = socketPort || retPort || \"443\";\n  } else {\n    socketHost = socketHost || document.location.hostname || \"\";\n    socketPort = socketPort || document.location.port || \"443\";\n  }\n\n  const socketUrl = `${socketProtocol}//${socketHost}${socketPort ? `:${socketPort}` : \"\"}/socket`;\n  console.log(`Phoenix Socket URL: ${socketUrl}`);\n\n  const socketSettings = {\n    params: { session_id: uuid() }\n  };\n\n  if (debug) {\n    socketSettings.logger = (kind, msg, data) => {\n      console.log(`${kind}: ${msg}`, data);\n    };\n  }\n\n  const socket = new Socket(socketUrl, socketSettings);\n  socket.connect();\n\n  return socket;\n}\n\nconst resolverLink = document.createElement(\"a\");\nexport function getReticulumFetchUrl(path, absolute = false) {\n  if (process.env.RETICULUM_SERVER) {\n    return `https://${process.env.RETICULUM_SERVER}${path}`;\n  } else if (absolute) {\n    resolverLink.href = path;\n    return resolverLink.href;\n  } else {\n    return path;\n  }\n}\n\nexport function getLandingPageForPhoto(photoUrl) {\n  const parsedUrl = new URL(photoUrl);\n  return getReticulumFetchUrl(parsedUrl.pathname.replace(\".png\", \".html\") + parsedUrl.search, true);\n}\n","module.exports = __webpack_public_path__ + \"assets/images/generic_vr_entry-6cb5c6205420ac7e9c3ca3e0c0a6db2c.svg\";","import { generatePublicKeyAndEncryptedObject, generateKeys, decryptObject } from \"./crypto\";\n\nconst LINK_ACTION_TIMEOUT = 10000;\n\nexport default class LinkChannel {\n  constructor(store) {\n    this.store = store;\n  }\n\n  setSocket = socket => {\n    this.socket = socket;\n  };\n\n  // Returns a promise that, when resolved, will forward an object with three keys:\n  //\n  // code: The code that was made available to use for link.\n  //\n  // cancel: A function that the caller can call to cancel the use of the code.\n  //\n  // onFinished: A promise that, when resolved, indicates the code is no longer usable,\n  // because it was either successfully used by the remote device or it has expired\n  // (\"used\" or \"expired\" is passed to the callback).\n  generateCode = () => {\n    return new Promise(resolve => {\n      const onFinished = new Promise(finished => {\n        const step = () => {\n          const getLetter = () => \"ABCDEFGHI\"[Math.floor(Math.random() * 9)];\n          const code = `${getLetter()}${getLetter()}${getLetter()}${getLetter()}`;\n\n          // Only respond to one link_request in this channel.\n          let readyToSend = false;\n          let leftChannel = false;\n\n          const channel = this.socket.channel(`link:${code}`, { timeout: LINK_ACTION_TIMEOUT });\n\n          const leave = () => {\n            if (!leftChannel) channel.leave();\n            leftChannel = true;\n          };\n\n          const cancel = () => leave();\n\n          channel.on(\"link_expired\", () => finished(\"expired\"));\n\n          channel.on(\"presence_state\", state => {\n            if (readyToSend) return;\n\n            if (Object.keys(state).length > 0) {\n              // Code is in use by someone else, try a new one\n              step();\n            } else {\n              readyToSend = true;\n              resolve({ code, cancel, onFinished });\n            }\n          });\n\n          channel.on(\"link_request\", incoming => {\n            if (readyToSend) {\n              const data = { path: location.pathname };\n\n              // Copy profile data to link'ed device if it's been set.\n              if (this.store.state.activity.hasChangedName) {\n                data.profile = { ...this.store.state.profile };\n              }\n              data.credentials = { ...this.store.state.credentials };\n\n              generatePublicKeyAndEncryptedObject(incoming.public_key, data).then(\n                ({ publicKeyString, encryptedData }) => {\n                  const payload = {\n                    target_session_id: incoming.reply_to_session_id,\n                    public_key: publicKeyString,\n                    data: encryptedData\n                  };\n\n                  if (!leftChannel) {\n                    channel.push(\"link_response\", payload);\n                  }\n\n                  leave();\n\n                  finished(\"used\");\n                  readyToSend = false;\n                }\n              );\n            }\n          });\n\n          channel.join().receive(\"error\", r => console.error(r));\n        };\n\n        step();\n      });\n    });\n  };\n\n  // Attempts to receive a link payload from a remote device using the given code.\n  //\n  // Promise rejects if the code is invalid or there is a problem with the channel.\n  // Promise resolves and passes payload of link source on successful link.\n  attemptLink = code => {\n    return new Promise((resolve, reject) => {\n      const channel = this.socket.channel(`link:${code}`, { timeout: LINK_ACTION_TIMEOUT });\n      let finished = false;\n\n      generateKeys().then(({ publicKeyString, privateKey }) => {\n        channel.on(\"presence_state\", state => {\n          const numOccupants = Object.keys(state).length;\n\n          if (numOccupants === 1) {\n            // Great, only sender is in topic, request link\n            channel.push(\"link_request\", {\n              reply_to_session_id: this.socket.params().session_id,\n              public_key: publicKeyString\n            });\n\n            setTimeout(() => {\n              if (finished) return;\n              channel.leave();\n              reject(new Error(\"no_response\"));\n            }, LINK_ACTION_TIMEOUT);\n          } else if (numOccupants === 0) {\n            // Nobody in this channel, probably a bad code.\n            channel.leave();\n            reject(new Error(\"failed\"));\n          } else {\n            console.warn(\"link code channel already has 2 or more occupants, something fishy is going on.\");\n            channel.leave();\n            reject(new Error(\"in_use\"));\n          }\n        });\n\n        channel.on(\"link_response\", payload => {\n          finished = true;\n          channel.leave();\n\n          decryptObject(payload.public_key, privateKey, payload.data).then(resolve);\n        });\n\n        channel.join().receive(\"error\", r => console.error(r));\n      });\n    });\n  };\n}\n","// NOTE: We do not use an IV since we generate a new keypair each time we use these routines.\n\nasync function deriveKey(privateKey, publicKey) {\n  return crypto.subtle.deriveKey(\n    { name: \"ECDH\", public: publicKey },\n    privateKey,\n    { name: \"AES-CBC\", length: 256 },\n    true,\n    [\"encrypt\", \"decrypt\"]\n  );\n}\n\nasync function publicKeyToString(key) {\n  return JSON.stringify(await crypto.subtle.exportKey(\"jwk\", key));\n}\n\nasync function stringToPublicKey(s) {\n  return await crypto.subtle.importKey(\"jwk\", JSON.parse(s), { name: \"ECDH\", namedCurve: \"P-256\" }, true, []);\n}\n\nfunction stringToArrayBuffer(s) {\n  const buf = new Uint8Array(s.length);\n\n  for (let i = 0; i < s.length; i++) {\n    buf[i] = s.charCodeAt(i);\n  }\n\n  return buf;\n}\n\nfunction arrayBufferToString(b) {\n  const buf = new Uint8Array(b);\n  let s = \"\";\n\n  for (let i = 0; i < buf.byteLength; i++) {\n    s += String.fromCharCode(buf[i]);\n  }\n\n  return s;\n}\n\n// This allows a single object to be passed encrypted from a receiver in a req -> response flow\n\n// Requestor generates a public key and private key, and should send the public key to receiver.\nexport async function generateKeys() {\n  const keyPair = await crypto.subtle.generateKey({ name: \"ECDH\", namedCurve: \"P-256\" }, true, [\"deriveKey\"]);\n  const publicKeyString = await publicKeyToString(keyPair.publicKey);\n  return { publicKeyString, privateKey: keyPair.privateKey };\n}\n\n// Receiver takes the public key from requestor and passes obj to get a response public key and the encrypted data to return.\nexport async function generatePublicKeyAndEncryptedObject(incomingPublicKeyString, obj) {\n  const iv = new Uint8Array(16);\n  const incomingPublicKey = await stringToPublicKey(incomingPublicKeyString);\n  const keyPair = await crypto.subtle.generateKey({ name: \"ECDH\", namedCurve: \"P-256\" }, true, [\"deriveKey\"]);\n  const publicKeyString = await publicKeyToString(keyPair.publicKey);\n  const secret = await deriveKey(keyPair.privateKey, incomingPublicKey);\n\n  const encryptedData = btoa(\n    arrayBufferToString(\n      await crypto.subtle.encrypt({ name: \"AES-CBC\", iv }, secret, stringToArrayBuffer(JSON.stringify(obj)))\n    )\n  );\n\n  return { publicKeyString, encryptedData };\n}\n\n// Requestor then takes the receiver's public key, the private key (returned from generateKeys()), and the data from the receiver.\nexport async function decryptObject(publicKeyString, privateKey, base64value) {\n  const iv = new Uint8Array(16);\n  const publicKey = await stringToPublicKey(publicKeyString);\n  const secret = await deriveKey(privateKey, publicKey);\n  const ciphertext = stringToArrayBuffer(atob(base64value));\n  const data = await crypto.subtle.decrypt({ name: \"AES-CBC\", iv }, secret, ciphertext);\n  return JSON.parse(arrayBufferToString(data));\n}\n","import Raven from \"raven-js\";\n\nexport default function registerTelemetry() {\n  if (process.env.NODE_ENV === \"production\") {\n    Raven.config(\"https://013d6a364fed43cdb0539a61d520597a@sentry.prod.mozaws.net/370\").install();\n  }\n}\n","import localeData from \"../assets/translations.data.json\";\nconst navigatorLang = ((navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage)\n  .toLowerCase()\n  .split(/[_-]+/)[0];\nexport const lang = (localeData[navigatorLang] && navigatorLang) || \"en\";\nexport const messages = localeData[lang] || localeData.en;\n","export const avatars = [\n  {\n    id: \"botdefault\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotDefault_Avatar-9f71f8ff22.gltf\"\n  },\n  {\n    id: \"botbobo\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotBobo_Avatar-f9740a010b.gltf\"\n  },\n  {\n    id: \"botdom\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotDom_Avatar-0c48bf15a5.gltf\"\n  },\n  {\n    id: \"botgreg\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotGreg_Avatar-98d39797bb.gltf\"\n  },\n  {\n    id: \"botguest\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotGuest_Avatar-78cd857332.gltf\"\n  },\n  {\n    id: \"botjim\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotJim_Avatar-d28005a687.gltf\"\n  },\n  {\n    id: \"botkev\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotKev_Avatar-a95787bb51.gltf\"\n  },\n  {\n    id: \"botpinky\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotPinky_Avatar-b0b93f8675.gltf\"\n  },\n  {\n    id: \"botrobert\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotRobert_Avatar-e9554880f3.gltf\"\n  },\n  {\n    id: \"botwoody\",\n    model: \"https://asset-bundles-prod.reticulum.io/bots/BotWoody_Avatar-0140485a23.gltf\"\n  }\n];\n","import { Validator } from \"jsonschema\";\nimport merge from \"deepmerge\";\n\nconst LOCAL_STORE_KEY = \"___hubs_store\";\nconst STORE_STATE_CACHE_KEY = Symbol();\nconst validator = new Validator();\nimport { EventTarget } from \"event-target-shim\";\nimport { generateDefaultProfile, generateRandomName } from \"../utils/identity.js\";\n\n// Durable (via local-storage) schema-enforced state that is meant to be consumed via forward data flow.\n// (Think flux but with way less incidental complexity, at least for now :))\nexport const SCHEMA = {\n  id: \"/HubsStore\",\n\n  definitions: {\n    profile: {\n      type: \"object\",\n      additionalProperties: false,\n      properties: {\n        displayName: { type: \"string\", pattern: \"^[A-Za-z0-9-]{3,32}$\" },\n        avatarId: { type: \"string\" }\n      }\n    },\n\n    credentials: {\n      type: \"object\",\n      additionalProperties: false,\n      properties: {\n        token: { type: [\"null\", \"string\"] },\n        email: { type: [\"null\", \"string\"] }\n      }\n    },\n\n    activity: {\n      type: \"object\",\n      additionalProperties: false,\n      properties: {\n        hasFoundFreeze: { type: \"boolean\" },\n        hasChangedName: { type: \"boolean\" },\n        lastEnteredAt: { type: \"string\" }\n      }\n    },\n\n    settings: {\n      type: \"object\",\n      additionalProperties: false,\n      properties: {\n        lastUsedMicDeviceId: { type: \"string\" }\n      }\n    },\n\n    uploadPromotionTokens: {\n      type: \"array\",\n      items: {\n        type: \"object\",\n        additionalProperties: false,\n        properties: {\n          fileId: { type: \"string\" },\n          promotionToken: { type: \"string\" }\n        }\n      }\n    }\n  },\n\n  type: \"object\",\n\n  properties: {\n    profile: { $ref: \"#/definitions/profile\" },\n    credentials: { $ref: \"#/definitions/credentials\" },\n    activity: { $ref: \"#/definitions/activity\" },\n    settings: { $ref: \"#/definitions/settings\" },\n    uploadPromotionTokens: { $ref: \"#/definitions/uploadPromotionTokens\" }\n  },\n\n  additionalProperties: false\n};\n\nexport default class Store extends EventTarget {\n  constructor() {\n    super();\n\n    if (localStorage.getItem(LOCAL_STORE_KEY) === null) {\n      localStorage.setItem(LOCAL_STORE_KEY, JSON.stringify({}));\n    }\n    this.update({\n      activity: {},\n      settings: {},\n      credentials: {},\n      profile: {},\n      uploadPromotionTokens: []\n    });\n  }\n\n  // Initializes store with any default bits\n  init = () => {\n    this.update({\n      profile: { ...generateDefaultProfile(), ...(this.state.profile || {}) }\n    });\n\n    // Regenerate name to encourage users to change it.\n    if (!this.state.activity.hasChangedName) {\n      this.update({ profile: { displayName: generateRandomName() } });\n    }\n  };\n\n  get state() {\n    if (!this.hasOwnProperty(STORE_STATE_CACHE_KEY)) {\n      this[STORE_STATE_CACHE_KEY] = JSON.parse(localStorage.getItem(LOCAL_STORE_KEY));\n    }\n\n    return this[STORE_STATE_CACHE_KEY];\n  }\n\n  update(newState) {\n    const finalState = merge(this.state, newState);\n    const { valid } = validator.validate(finalState, SCHEMA);\n\n    if (!valid) {\n      // Intentionally not including details about the state or validation result here, since we don't want to leak\n      // sensitive data in the error message.\n      throw new Error(`Write to store failed schema validation.`);\n    }\n\n    localStorage.setItem(LOCAL_STORE_KEY, JSON.stringify(finalState));\n    delete this[STORE_STATE_CACHE_KEY];\n\n    this.dispatchEvent(new CustomEvent(\"statechanged\"));\n\n    return finalState;\n  }\n}\n","module.exports = __webpack_public_path__ + \"assets/images/hub-preview-light-no-shadow-5ebb166e8580d819b445892173ec0286.png\";","import { avatars } from \"../assets/avatars/avatars.js\";\n\nconst names = [\n  \"Baers-Pochard\",\n  \"Baikal-Teal\",\n  \"Barrows-Goldeneye\",\n  \"Blue-Billed\",\n  \"Blue-Duck\",\n  \"Blue-Winged\",\n  \"Brown-Teal\",\n  \"Bufflehead\",\n  \"Canvasback\",\n  \"Cape-Shoveler\",\n  \"Chestnut-Teal\",\n  \"Chiloe-Wigeon\",\n  \"Cinnamon-Teal\",\n  \"Comb-Duck\",\n  \"Common-Eider\",\n  \"Common-Goldeneye\",\n  \"Common-Merganser\",\n  \"Common-Pochard\",\n  \"Common-Scoter\",\n  \"Common-Shelduck\",\n  \"Cotton-Pygmy\",\n  \"Crested-Duck\",\n  \"Crested-Shelduck\",\n  \"Eatons-Pintail\",\n  \"Falcated\",\n  \"Ferruginous\",\n  \"Freckled-Duck\",\n  \"Gadwall\",\n  \"Garganey\",\n  \"Greater-Scaup\",\n  \"Green-Pygmy\",\n  \"Grey-Teal\",\n  \"Hardhead\",\n  \"Harlequin\",\n  \"Hartlaubs\",\n  \"Hooded-Merganser\",\n  \"Hottentot-Teal\",\n  \"Kelp-Goose\",\n  \"King-Eider\",\n  \"Lake-Duck\",\n  \"Laysan-Duck\",\n  \"Lesser-Scaup\",\n  \"Long-Tailed\",\n  \"Maccoa-Duck\",\n  \"Mallard\",\n  \"Mandarin\",\n  \"Marbled-Teal\",\n  \"Mellers-Duck\",\n  \"Merganser\",\n  \"Northern-Pintail\",\n  \"Orinoco-Goose\",\n  \"Paradise-Shelduck\",\n  \"Plumed-Whistler\",\n  \"Puna-Teal\",\n  \"Pygmy-Goose\",\n  \"Radjah-Shelduck\",\n  \"Red-Billed\",\n  \"Red-Crested\",\n  \"Red-Shoveler\",\n  \"Ring-Necked\",\n  \"Ringed-Teal\",\n  \"Rosy-Billed\",\n  \"Ruddy-Shelduck\",\n  \"Salvadoris-Teal\",\n  \"Scaly-Sided\",\n  \"Shelduck\",\n  \"Shoveler\",\n  \"Silver-Teal\",\n  \"Smew\",\n  \"Spectacled-Eider\",\n  \"Spot-Billed\",\n  \"Spotted-Whistler\",\n  \"Steamerduck\",\n  \"Stellers-Eider\",\n  \"Sunda-Teal\",\n  \"Surf-Scoter\",\n  \"Tufted-Duck\",\n  \"Velvet-Scoter\",\n  \"Wandering-Whistler\",\n  \"Whistling-duck\",\n  \"White-Backed\",\n  \"White-Cheeked\",\n  \"White-Winged\",\n  \"Wigeon\",\n  \"Wood-Duck\",\n  \"Yellow-Billed\"\n];\n\nfunction selectRandom(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function generateRandomName() {\n  return `${selectRandom(names)}-${Math.floor(10000 + Math.random() * 10000)}`;\n}\n\nexport const avatarIds = avatars.map(av => av.id);\n\nexport function generateDefaultProfile() {\n  return {\n    avatarId: selectRandom(avatarIds)\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const ReactAudioContext = React.createContext({});\n\nexport const hudHoverSound = \"play_sound-hud_hover_start\";\n\nexport const WithHoverSound = ({ sound, children }) => {\n  return (\n    <ReactAudioContext.Consumer>\n      {context => {\n        return React.cloneElement(children, {\n          onMouseEnter: e => {\n            if (context && context.playSound) {\n              context.playSound(sound || hudHoverSound);\n            }\n            children.props.onMouseEnter && children.props.onMouseEnter(e);\n          }\n        });\n      }}\n    </ReactAudioContext.Consumer>\n  );\n};\n\nWithHoverSound.propTypes = {\n  children: PropTypes.object,\n  sound: PropTypes.string\n};\n","import \"./assets/stylesheets/link.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport registerTelemetry from \"./telemetry\";\nimport LinkRoot from \"./react-components/link-root\";\nimport LinkChannel from \"./utils/link-channel\";\nimport { connectToReticulum } from \"./utils/phoenix-utils\";\nimport Store from \"./storage/store\";\nimport { detectInHMD } from \"./utils/vr-caps-detect.js\";\n\nregisterTelemetry();\n\nconst socket = connectToReticulum();\nconst store = new Store();\nstore.init();\n\nconst linkChannel = new LinkChannel(store);\n\nlinkChannel.setSocket(socket);\n\nReactDOM.render(\n  <LinkRoot store={store} linkChannel={linkChannel} showHeadsetLinkOption={detectInHMD()} />,\n  document.getElementById(\"link-root\")\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IntlProvider, FormattedMessage, addLocaleData } from \"react-intl\";\nimport en from \"react-intl/locale-data/en\";\n\nimport { lang, messages } from \"../utils/i18n\";\nimport classNames from \"classnames\";\nimport styles from \"../assets/stylesheets/link.scss\";\nimport { disableiOSZoom } from \"../utils/disable-ios-zoom\";\nimport HeadsetIcon from \"../assets/images/generic_vr_entry.svg\";\nimport { WithHoverSound } from \"./wrap-with-audio\";\n\nconst MAX_DIGITS = 6;\nconst MAX_LETTERS = 4;\n\naddLocaleData([...en]);\ndisableiOSZoom();\nconst hasTouchEvents = \"ontouchstart\" in document.documentElement;\n\nclass LinkRoot extends Component {\n  static propTypes = {\n    intl: PropTypes.object,\n    store: PropTypes.object,\n    linkChannel: PropTypes.object,\n    showHeadsetLinkOption: PropTypes.bool\n  };\n\n  state = {\n    entered: \"\",\n    isAlphaMode: false,\n    failedAtLeastOnce: false\n  };\n\n  componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  };\n\n  handleKeyDown = e => {\n    // Number keys 0-9\n    if ((e.keyCode < 48 || e.keyCode > 57) && !this.state.isAlphaMode) {\n      return;\n    }\n\n    // Alpha keys A-I\n    if ((e.keyCode < 65 || e.keyCode > 73) && this.state.isAlphaMode) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.state.isAlphaMode) {\n      this.addToEntry(\"IHGFEDCBA\"[73 - e.keyCode]);\n    } else {\n      this.addToEntry(e.keyCode - 48);\n    }\n  };\n\n  maxAllowedChars = () => {\n    return this.state.isAlphaMode ? MAX_LETTERS : MAX_DIGITS;\n  };\n\n  addToEntry = ch => {\n    if (this.state.entered.length >= this.maxAllowedChars()) return;\n    const newChars = `${this.state.entered}${ch}`;\n\n    if (newChars.length === this.maxAllowedChars()) {\n      this.attemptLookup(newChars);\n    }\n\n    this.setState({ entered: newChars });\n  };\n\n  removeChar = () => {\n    const entered = this.state.entered;\n    if (entered.length === 0) return;\n    this.setState({ entered: entered.substring(0, entered.length - 1) });\n  };\n\n  attemptLink = async code => {\n    this.props.linkChannel\n      .attemptLink(code)\n      .then(response => {\n        // If there is a profile from the linked device, copy it over if we don't have one yet.\n        if (response.profile) {\n          const { hasChangedName } = this.props.store.state.activity;\n\n          if (!hasChangedName) {\n            this.props.store.update({ activity: { hasChangedName: true }, profile: response.profile });\n          }\n        }\n        this.props.store.update({ credentials: response.credentials });\n\n        if (response.path) {\n          window.location.href = response.path;\n        }\n      })\n      .catch(e => {\n        this.setState({ failedAtLeastOnce: true, entered: \"\" });\n\n        if (!(e instanceof Error && (e.message === \"in_use\" || e.message === \"failed\"))) {\n          throw e;\n        }\n      });\n  };\n\n  attemptEntry = async code => {\n    const url = \"/link/\" + code;\n    const res = await fetch(url);\n\n    if (res.status >= 400) {\n      this.setState({ failedAtLeastOnce: true, entered: \"\" });\n    } else {\n      document.location = url;\n    }\n  };\n\n  attemptLookup = async code => {\n    if (this.state.isAlphaMode) {\n      // Headset link code\n      this.attemptLink(code);\n    } else {\n      // Room entry code\n      this.attemptEntry(code);\n    }\n  };\n\n  toggleMode = () => {\n    this.setState({ isAlphaMode: !this.state.isAlphaMode, entered: \"\", failedAtLeastOnce: false });\n  };\n\n  render() {\n    // Note we use type \"tel\" for the input due to https://bugzilla.mozilla.org/show_bug.cgi?id=1005603\n\n    return (\n      <IntlProvider locale={lang} messages={messages}>\n        <div className={styles.link}>\n          <div className={styles.linkContents}>\n            <div className={styles.logo}>\n              <img src=\"../assets/images/hub-preview-light-no-shadow.png\" />\n            </div>\n            {this.state.entered.length === this.maxAllowedChars() && (\n              <div className={classNames(\"loading-panel\", styles.codeLoadingPanel)}>\n                <div className=\"loader-wrap\">\n                  <div className=\"loader\">\n                    <div className=\"loader-center\" />\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className={styles.enteredContents}>\n              <div className={styles.header}>\n                <FormattedMessage\n                  id={\n                    this.state.failedAtLeastOnce\n                      ? \"link.try_again\"\n                      : \"link.link_page_header_\" + (!this.state.isAlphaMode ? \"entry\" : \"headset\")\n                  }\n                />\n              </div>\n\n              <div className={styles.entered}>\n                <input\n                  className={styles.charInput}\n                  type={this.state.isAlphaMode ? \"text\" : \"tel\"}\n                  pattern=\"[0-9A-I]*\"\n                  value={this.state.entered}\n                  onChange={ev => {\n                    if (!this.state.isAlphaMode && ev.target.value.match(/[a-z]/i)) {\n                      this.setState({ isAlphaMode: true });\n                    }\n\n                    this.setState({ entered: ev.target.value.toUpperCase() });\n                  }}\n                />\n              </div>\n\n              <div className={styles.enteredFooter}>\n                {!this.state.isAlphaMode &&\n                  this.props.showHeadsetLinkOption && (\n                    <img onClick={() => this.toggleMode()} src={HeadsetIcon} className={styles.headsetIcon} />\n                  )}\n                {!this.state.isAlphaMode &&\n                  this.props.showHeadsetLinkOption && (\n                    <span>\n                      <WithHoverSound>\n                        <a href=\"#\" onClick={() => this.toggleMode()}>\n                          <FormattedMessage id=\"link.linking_a_headset\" />\n                        </a>\n                      </WithHoverSound>\n                    </span>\n                  )}\n              </div>\n            </div>\n\n            <div className={styles.keypad}>\n              {(this.state.isAlphaMode\n                ? [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"]\n                : [1, 2, 3, 4, 5, 6, 7, 8, 9]\n              ).map((d, i) => (\n                <WithHoverSound key={`char_${i}`}>\n                  <button\n                    disabled={this.state.entered.length === this.maxAllowedChars()}\n                    className={styles.keypadButton}\n                    key={`char_${i}`}\n                    onClick={() => {\n                      if (!hasTouchEvents) this.addToEntry(d);\n                    }}\n                    onTouchStart={() => this.addToEntry(d)}\n                  >\n                    {d}\n                  </button>\n                </WithHoverSound>\n              ))}\n              {this.props.showHeadsetLinkOption ? (\n                <WithHoverSound>\n                  <button\n                    className={classNames(styles.keypadButton, styles.keypadToggleMode)}\n                    onTouchStart={() => this.toggleMode()}\n                    onClick={() => {\n                      if (!hasTouchEvents) this.toggleMode();\n                    }}\n                  >\n                    {this.state.isAlphaMode ? \"123\" : \"ABC\"}\n                  </button>\n                </WithHoverSound>\n              ) : (\n                <div />\n              )}\n              {!this.state.isAlphaMode && (\n                <WithHoverSound>\n                  <button\n                    disabled={this.state.entered.length === this.maxAllowedChars()}\n                    className={classNames(styles.keypadButton, styles.keypadZeroButton)}\n                    onTouchStart={() => this.addToEntry(0)}\n                    onClick={() => {\n                      if (!hasTouchEvents) this.addToEntry(0);\n                    }}\n                  >\n                    0\n                  </button>\n                </WithHoverSound>\n              )}\n              <WithHoverSound>\n                <button\n                  disabled={this.state.entered.length === 0 || this.state.entered.length === this.maxAllowedChars()}\n                  className={classNames(styles.keypadButton, styles.keypadBackspace)}\n                  onTouchStart={() => this.removeChar()}\n                  onClick={() => {\n                    if (!hasTouchEvents) this.removeChar();\n                  }}\n                >\n                  ⌫\n                </button>\n              </WithHoverSound>\n            </div>\n\n            <div className={styles.footer}>\n              {!this.state.isAlphaMode &&\n                this.props.showHeadsetLinkOption && (\n                  <div\n                    className={styles.linkHeadsetFooterLink}\n                    style={{ visibility: this.state.isAlphaMode ? \"hidden\" : \"visible\" }}\n                  >\n                    <WithHoverSound>\n                      <img onClick={() => this.toggleMode()} src={HeadsetIcon} className={styles.headsetIcon} />\n                    </WithHoverSound>\n                    <span>\n                      <WithHoverSound>\n                        <a href=\"#\" onClick={() => this.toggleMode()}>\n                          <FormattedMessage id=\"link.linking_a_headset\" />\n                        </a>\n                      </WithHoverSound>\n                    </span>\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default LinkRoot;\n","// removed by extract-text-webpack-plugin\nmodule.exports = {\"keypad-button\":\"link__keypad-button__2ElvK\",\"keypadButton\":\"link__keypad-button__2ElvK\",\"entered\":\"link__entered__1NNNd\",\"char-input\":\"link__char-input__3Uver\",\"charInput\":\"link__char-input__3Uver\",\"logo\":\"link__logo__dzO36\",\"link\":\"link__link__3kJ6B\",\"link-contents\":\"link__link-contents__3L1rY\",\"linkContents\":\"link__link-contents__3L1rY\",\"entered-footer\":\"link__entered-footer__2Oi0C\",\"enteredFooter\":\"link__entered-footer__2Oi0C\",\"entered-contents\":\"link__entered-contents__2ZmCP\",\"enteredContents\":\"link__entered-contents__2ZmCP\",\"code-loading-panel\":\"link__code-loading-panel__21IQD\",\"codeLoadingPanel\":\"link__code-loading-panel__21IQD\",\"entry-footer-image\":\"link__entry-footer-image__1XOeK\",\"entryFooterImage\":\"link__entry-footer-image__1XOeK\",\"footer-image\":\"link__footer-image__AsDh-\",\"footerImage\":\"link__footer-image__AsDh-\",\"header\":\"link__header__ID1fV\",\"footer\":\"link__footer__DERRP\",\"keypad\":\"link__keypad__1FVTF\",\"keypad-backspace\":\"link__keypad-backspace__M4x5m\",\"keypadBackspace\":\"link__keypad-backspace__M4x5m\",\"keypad-toggle-mode\":\"link__keypad-toggle-mode__2sIRG\",\"keypadToggleMode\":\"link__keypad-toggle-mode__2sIRG\",\"char\":\"link__char__20D9j\",\"headset-icon\":\"link__headset-icon__22_kp\",\"headsetIcon\":\"link__headset-icon__22_kp\",\"link-headset-footer-link\":\"link__link-headset-footer-link__pGQB8\",\"linkHeadsetFooterLink\":\"link__link-headset-footer-link__pGQB8\"};","const { detect } = require(\"detect-browser\");\n\nconst browser = detect();\n\n// Precision on device detection is fuzzy -- we can sometimes know if a device is definitely\n// available, or definitely *not* available, and assume it may be available otherwise.\nexport const VR_DEVICE_AVAILABILITY = {\n  yes: \"yes\", // Implies VR can be launched into on this device immediately, in this browser\n  no: \"no\", // Implies this VR device is definitely not supported regardless of browser\n  maybe: \"maybe\" // Implies this device may support this VR platform, but may not be installed or in a compatible browser\n};\n\nfunction isMaybeGearVRCompatibleDevice(ua) {\n  return /\\WAndroid\\W/.test(ua);\n}\n\nfunction isMaybeDaydreamCompatibleDevice(ua) {\n  return /\\WAndroid\\W/.test(ua);\n}\n\n// Blacklist of VR device name regex matchers that we do not want to consider as valid VR devices\n// that can be entered into as a \"generic\" entry flow.\nconst GENERIC_ENTRY_TYPE_DEVICE_BLACKLIST = [/cardboard/i];\n\nexport function detectInHMD() {\n  const ua = navigator.userAgent;\n  const isFirefoxReality = /Firefox/.test(ua) && /Android/.test(ua) && window.hasNativeWebVRImplementation;\n  const isOculusBrowser = /Oculus/.test(ua);\n  return isOculusBrowser || isFirefoxReality;\n}\n\n// Tries to determine VR entry compatibility regardless of the current browser.\n//\n// For each VR \"entry type\", returns VR_DEVICE_AVAILABILITY.yes if that type can be launched into directly from this browser\n// on this device, returns VR_DEVICE_AVAILABILITY.no if that type is known to not be possible to ever use on this device no matter what,\n// and VR_DEVICE_AVAILABILITY.maybe if the device potentially could support that type if a different browser was running, or if\n// the software was setup, an HMD was purchased, etc.\n//\n// When \"yes\" or \"maybe\", we should present the option. If \"maybe\", when chosen try to get them into a compatible browser.\n// Once in a compatible browser, we should assume it will work (if it doesn't, it's because they don't have the headset,\n// haven't installed the software, our guess about their phone was wrong, etc.)\n//\n// At the time of this writing there are the following VR \"entry types\" that will be validated by this method:\n//\n// - screen: Enter \"on-screen\" in 2D\n// - generic: Generic WebVR (platform/OS agnostic indicator if a general 'Enter VR' option should be presented.)\n// - daydream: Google Daydream\n// - gearvr: Oculus GearVR\n// - cardboard: Google Cardboard\n//\n// This function also detects if the user is already in a headset, and returns the isInHMD key to be `true` if so.\nexport async function getAvailableVREntryTypes() {\n  const ua = navigator.userAgent;\n  const isSamsungBrowser = browser.name === \"chrome\" && /SamsungBrowser/.test(ua);\n\n  // This needs to be kept up-to-date with the latest browsers that can support VR and Hubs.\n  // Checking for navigator.getVRDisplays always passes b/c of polyfill.\n  const isWebVRCapableBrowser = window.hasNativeWebVRImplementation;\n\n  const isDaydreamCapableBrowser = !!(isWebVRCapableBrowser && browser.name === \"chrome\" && !isSamsungBrowser);\n  const isIDevice = AFRAME.utils.device.isIOS();\n  const isFirefoxBrowser = browser.name === \"firefox\";\n  const isUIWebView = typeof navigator.mediaDevices === \"undefined\";\n\n  const safari = isIDevice\n    ? !isUIWebView\n      ? VR_DEVICE_AVAILABILITY.yes\n      : VR_DEVICE_AVAILABILITY.maybe\n    : VR_DEVICE_AVAILABILITY.no;\n\n  const displays = isWebVRCapableBrowser ? await navigator.getVRDisplays() : [];\n\n  const isOculusBrowser = /Oculus/.test(ua);\n  const isInHMD = detectInHMD();\n\n  const screen = isInHMD\n    ? VR_DEVICE_AVAILABILITY.no\n    : isIDevice && isUIWebView\n      ? VR_DEVICE_AVAILABILITY.maybe\n      : VR_DEVICE_AVAILABILITY.yes;\n\n  // HACK -- we prompt the user to install firefox if they click the VR button on a non-WebVR compatible\n  // browser. once we change this (ie when Chrome has VR support) then this check can be removed. Without this\n  // check if you have FF on Mac/Linux you'll get the confusing flow of having a VR button but then\n  // being asked to download FF.\n  const isNonWebVRFirefox = !isWebVRCapableBrowser && isFirefoxBrowser;\n  let generic =\n    AFRAME.utils.device.isMobile() || isNonWebVRFirefox ? VR_DEVICE_AVAILABILITY.no : VR_DEVICE_AVAILABILITY.maybe;\n  let cardboard = VR_DEVICE_AVAILABILITY.no;\n\n  // We only consider GearVR support as \"maybe\" and never \"yes\". The only browser\n  // that will detect GearVR outside of VR is Samsung Internet, and we'd prefer to launch into Oculus\n  // Browser for now since Samsung Internet requires an additional WebVR installation + flag, so return \"maybe\".\n  //\n  // If we are in Oculus Browser (ie, we are literally wearing a GearVR) then return 'yes'.\n  let gearvr = VR_DEVICE_AVAILABILITY.no;\n  if (isMaybeGearVRCompatibleDevice(ua)) {\n    gearvr = isOculusBrowser ? VR_DEVICE_AVAILABILITY.yes : VR_DEVICE_AVAILABILITY.maybe;\n  }\n\n  // For daydream detection, we first check if they are on an Android compatible device, and assume they\n  // may support daydream *unless* this browser has WebVR capabilities, in which case we can do better.\n  let daydream =\n    isMaybeDaydreamCompatibleDevice(ua) && !isInHMD ? VR_DEVICE_AVAILABILITY.maybe : VR_DEVICE_AVAILABILITY.no;\n\n  if (isWebVRCapableBrowser) {\n    // Generic is supported for non-blacklisted devices and presentable HMDs.\n    generic = displays.find(\n      d => d.capabilities.canPresent && !GENERIC_ENTRY_TYPE_DEVICE_BLACKLIST.find(r => r.test(d.displayName))\n    )\n      ? VR_DEVICE_AVAILABILITY.yes\n      : VR_DEVICE_AVAILABILITY.no;\n\n    cardboard =\n      !isIDevice &&\n      !isFirefoxBrowser &&\n      displays.find(d => d.capabilities.canPresent && /cardboard/i.test(d.displayName))\n        ? VR_DEVICE_AVAILABILITY.yes\n        : VR_DEVICE_AVAILABILITY.no;\n\n    // For daydream detection, in a WebVR browser we can increase confidence in daydream compatibility.\n    const hasDaydreamWebVRDevice = displays.find(d => /daydream/i.test(d.displayName));\n\n    if (hasDaydreamWebVRDevice) {\n      // If we detected daydream via WebVR\n      daydream = VR_DEVICE_AVAILABILITY.yes;\n      generic = VR_DEVICE_AVAILABILITY.no;\n    } else if (isDaydreamCapableBrowser) {\n      // If we didn't detect daydream in a daydream capable browser, we definitely can't run daydream at all.\n      daydream = VR_DEVICE_AVAILABILITY.no;\n    }\n  }\n\n  return { screen, generic, gearvr, daydream, cardboard, isInHMD, safari };\n}\n","import { detectOS } from \"detect-browser\";\n\nexport function disableiOSZoom() {\n  if (detectOS(navigator.userAgent) !== \"iOS\") return;\n\n  let lastTouchAtMs = 0;\n\n  document.addEventListener(\"touchmove\", ev => {\n    if (ev.scale === 1) return;\n\n    ev.preventDefault();\n  });\n\n  document.addEventListener(\"touchend\", ev => {\n    const now = new Date().getTime();\n    const isDoubleTouch = now - lastTouchAtMs <= 300;\n    lastTouchAtMs = now;\n\n    if (isDoubleTouch) {\n      ev.preventDefault();\n    }\n  });\n}\n"],"sourceRoot":""}